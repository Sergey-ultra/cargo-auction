version: "3.8"

services:
  nginx:
    image: nginx:alpine
    container_name: cargo_nginx
    restart: unless-stopped
    tty: true
    ports:
      - "8078:80"
    links:
      - app
    volumes:
      - ./:/var/www
      - ./docker/nginx/conf.d/app.conf:/etc/nginx/conf.d/default.conf:rw
      - ./docker/logs/nginx:/var/logs/nginx:rw
    networks:
      - cargo

  app:
    build: ./docker/php
    container_name: cargo_php
    restart: unless-stopped
    tty: true
#    на этом порту должен запускаться websocket server
#    ports:
#      - "4000:4000"
    volumes:
      - ./:/var/www
      - ./docker/php/conf/php.ini:/usr/local/etc/php/conf.d/php.ini
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
      DATABASE_USER: postgres
      DATABASE_PASS: postgres
      DATABASE_NAME: cargo
#      PHP_IDE_CONFIG: "serverName=cargoAuctionServer"
    networks:
      - cargo

  centrifugo:
    container_name: centrifugo
    image: centrifugo/centrifugo:v5
    restart: always
    volumes:
      - ./docker/centrifugo/config.json:/centrifugo/config.json
    command: centrifugo -c config.json
    ports:
      - "8000:8000"
    ulimits:
      nofile:
        soft: 65535
        hard: 65535
    networks:
      - cargo


  postgres:
    image: kartoza/postgis:latest
    container_name: cargo_postgres
    restart: unless-stopped
    tty: true
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_TEMPLATE_EXTENSIONS=true
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=cargo
      - PASSWORD_AUTHENTICATION=md5
      - POSTGRES_MULTIPLE_EXTENSIONS=postgis,hstore,postgis_topology, postgis_sfcgal
    volumes:
#      - ./docker/db/main:/etc/postgresql/13/main
      - ./docker/db/data:/var/lib/postgresql/data:rw
      - ./docker/db/init.sql:/docker-entrypoint-initdb.d/setup-db.sql
    networks:
      - cargo

#volumes:
#  db_data:

networks:
  cargo:
    name: cargo
    driver: bridge



